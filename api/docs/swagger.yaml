basePath: /
definitions:
  handlers.IncreaseTimeCountDTO:
    properties:
      count:
        type: integer
    required:
    - count
    type: object
  handlers.SuccessAuthDTO:
    properties:
      token:
        type: string
    type: object
  handlers.TodoCreateDTO:
    properties:
      description:
        type: string
      id:
        type: integer
      parentID:
        type: integer
      title:
        type: string
    required:
    - description
    - id
    - title
    type: object
  handlers.UserSignInDTO:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  handlers.UserSignUpDTO:
    properties:
      birthday:
        type: string
      expectedSalary:
        type: number
      login:
        type: string
      nickname:
        type: string
      password:
        type: string
    required:
    - expectedSalary
    - login
    - nickname
    - password
    type: object
  models.Todo:
    properties:
      description:
        type: string
      id:
        type: integer
      list:
        items:
          $ref: '#/definitions/models.Todo'
        type: array
      title:
        type: string
    type: object
  models.UserPublic:
    properties:
      birthday:
        type: string
      expectedSalary:
        type: number
      id:
        type: string
      nickname:
        type: string
    type: object
host: http://localhost:8080
info:
  contact:
    email: nahuy@kaniv.com
    name: Backend developer
    url: https://t.me/bringmetheaugust
  description: Work hard, play hard
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fudol OpenAPI doc
  version: 0.0.1
paths:
  /auth/signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UserSignInDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessAuthDTO'
        "400":
          description: invalid body fields.
          schema: {}
        "406":
          description: Invalid credentials.
          schema: {}
      summary: sign in
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UserSignUpDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.SuccessAuthDTO'
        "400":
          description: invalid body fields.
          schema: {}
        "406":
          description: nickname or login is existed.
          schema: {}
      summary: sign up
      tags:
      - Auth
  /fudol/increase:
    patch:
      consumes:
      - application/json
      parameters:
      - description: body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.IncreaseTimeCountDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: invalid body fields.
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Increase time count
      tags:
      - Fudol
  /fudol/reset:
    patch:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Reset time count
      tags:
      - Fudol
  /todo:
    delete:
      consumes:
      - application/json
      parameters:
      - description: todo's ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: id param is not provided
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: remove todo
      tags:
      - TodoList
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: get todo list
      tags:
      - TodoList
    post:
      consumes:
      - application/json
      parameters:
      - description: body request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.TodoCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: invalid body fields.
          schema: {}
        "406":
          description: parent ID is not esisted / ID is already esists.
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: add todo
      tags:
      - TodoList
  /user:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserPublic'
      security:
      - ApiKeyAuth: []
      summary: get user data
      tags:
      - User
securityDefinitions:
  Bearer:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
