// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Backend developer",
            "url": "https://t.me/bringmetheaugust",
            "email": "nahuy@kaniv.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/signin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "sign in",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserSignInDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessAuthDTO"
                        }
                    },
                    "400": {
                        "description": "invalid body fields.",
                        "schema": {}
                    },
                    "406": {
                        "description": "Invalid credentials.",
                        "schema": {}
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "sign up",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserSignUpDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessAuthDTO"
                        }
                    },
                    "400": {
                        "description": "invalid body fields.",
                        "schema": {}
                    },
                    "406": {
                        "description": "nickname or login is existed.",
                        "schema": {}
                    }
                }
            }
        },
        "/fudol": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Fudol"
                ],
                "summary": "get fudol",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.FudolPublic"
                        }
                    },
                    "400": {
                        "description": "user doesn't have a fudols yet",
                        "schema": {}
                    }
                }
            }
        },
        "/fudol/increase": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fudol"
                ],
                "summary": "increase time count",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.IncreaseTimeCountDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "invalid body fields.",
                        "schema": {}
                    }
                }
            }
        },
        "/fudol/reset": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fudol"
                ],
                "summary": "reset time count",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/fudol/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fudol"
                ],
                "summary": "user rating list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FudolRating"
                            }
                        }
                    }
                }
            }
        },
        "/todo": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoList"
                ],
                "summary": "get todo list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Todo"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoList"
                ],
                "summary": "add todo",
                "parameters": [
                    {
                        "description": "body request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TodoCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "invalid body fields.",
                        "schema": {}
                    },
                    "406": {
                        "description": "parent ID is not esisted / ID is already esists.",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TodoList"
                ],
                "summary": "remove todo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "todo's ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "id param is not provided",
                        "schema": {}
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "get user data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserPublic"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.IncreaseTimeCountDTO": {
            "type": "object",
            "required": [
                "count"
            ],
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "handlers.SuccessAuthDTO": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handlers.TodoCreateDTO": {
            "type": "object",
            "required": [
                "description",
                "id",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parentID": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handlers.UserSignInDTO": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.UserSignUpDTO": {
            "type": "object",
            "required": [
                "expectedSalary",
                "login",
                "nickname",
                "password"
            ],
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "expectedSalary": {
                    "type": "number"
                },
                "login": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.FudolPublic": {
            "type": "object",
            "properties": {
                "timeCount": {
                    "type": "integer"
                }
            }
        },
        "models.FudolRating": {
            "type": "object",
            "properties": {
                "timeCount": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.FudolRatingUser"
                }
            }
        },
        "models.FudolRatingUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "models.Todo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Todo"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.UserPublic": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string"
                },
                "expectedSalary": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "http://localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Fudol OpenAPI doc",
	Description:      "Work hard, play hard",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
